	.file	1 "ordenamiento_iterativo_modificado.c"
	.section .mdebug.abi32
	.previous
	.nan	legacy
	.module	fp=xx
	.module	nooddspreg
	.abicalls
	.text
	.align	2
	.globl	ordenamiento_iterativo
	.set	nomips16
	.set	nomicromips
	.ent	ordenamiento_iterativo
	.type	ordenamiento_iterativo, @function
ordenamiento_iterativo:
	.frame	$fp,32,$31		# vars= 16, regs= 1/0, args= 0, gp= 8
	.mask	0x40000000,-4
	.fmask	0x00000000,0
	.set	noreorder
	.set	nomacro
	addiu	$sp,$sp,-32
	sw	$fp,28($sp)
	move	$fp,$sp
	sw	$4,32($fp)
	sw	$5,36($fp)
	li	$2,1			# 0x1
	sw	$2,8($fp)
	b	$L2
	nop

$L6:
	sw	$0,12($fp)
	b	$L3
	nop

$L5:
	lw	$2,12($fp)
	sll	$2,$2,2
	lw	$3,32($fp)
	addu	$2,$3,$2
	lw	$3,0($2)
	lw	$2,12($fp)
	addiu	$2,$2,1
	sll	$2,$2,2
	lw	$4,32($fp)
	addu	$2,$4,$2
	lw	$2,0($2)
	slt	$2,$2,$3
	beq	$2,$0,$L4
	nop

	lw	$2,12($fp)
	sll	$2,$2,2
	lw	$3,32($fp)
	addu	$2,$3,$2
	lw	$2,0($2)
	sw	$2,16($fp)
	lw	$2,12($fp)
	sll	$2,$2,2
	lw	$3,32($fp)
	addu	$2,$3,$2
	lw	$3,12($fp)
	addiu	$3,$3,1
	sll	$3,$3,2
	lw	$4,32($fp)
	addu	$3,$4,$3
	lw	$3,0($3)
	sw	$3,0($2)
	lw	$2,12($fp)
	addiu	$2,$2,1
	sll	$2,$2,2
	lw	$3,32($fp)
	addu	$2,$3,$2
	lw	$3,16($fp)
	sw	$3,0($2)
$L4:
	lw	$2,12($fp)
	addiu	$2,$2,1
	sw	$2,12($fp)
$L3:
	lw	$3,36($fp)
	lw	$2,8($fp)
	subu	$3,$3,$2
	lw	$2,12($fp)
	slt	$2,$2,$3
	bne	$2,$0,$L5
	nop

	lw	$2,8($fp)
	addiu	$2,$2,1
	sw	$2,8($fp)
$L2:
	lw	$3,8($fp)
	lw	$2,36($fp)
	slt	$2,$3,$2
	bne	$2,$0,$L6
	nop

	nop
	move	$sp,$fp
	lw	$fp,28($sp)
	addiu	$sp,$sp,32
	j	$31
	nop

	.set	macro
	.set	reorder
	.end	ordenamiento_iterativo
	.size	ordenamiento_iterativo, .-ordenamiento_iterativo
	.rdata
	.align	2
$LC0:
	.ascii	"ARGUMENTOS INSUFICIENTES\000"
	.align	2
$LC1:
	.ascii	"r\000"
	.align	2
$LC2:
	.ascii	"%d\012\000"
	.align	2
$LC3:
	.ascii	"ERROR DE LECTURA DE ARCHIVO\000"
	.align	2
$LC4:
	.ascii	"%d\000"
	.align	2
$LC6:
	.ascii	"Tiempo de ejecuci\303\263n iterativo (time.h): %f s\012\000"
	.align	2
$LC7:
	.ascii	"w\000"
	.align	2
$LC8:
	.ascii	"SALIDA_ITERATIVO.txt\000"
	.align	2
$LC9:
	.ascii	"DEMACIADOS ARGUMENTOS\000"
	.text
	.align	2
	.globl	main
	.set	nomips16
	.set	nomicromips
	.ent	main
	.type	main, @function
main:
	.frame	$fp,64,$31		# vars= 32, regs= 2/0, args= 16, gp= 8
	.mask	0xc0000000,-4
	.fmask	0x00000000,0
	.set	noreorder
	.set	nomacro
	addiu	$sp,$sp,-64
	sw	$31,60($sp)
	sw	$fp,56($sp)
	move	$fp,$sp
	lui	$28,%hi(__gnu_local_gp)
	addiu	$28,$28,%lo(__gnu_local_gp)
	.cprestore	16
	sw	$4,64($fp)
	sw	$5,68($fp)
	sw	$0,28($fp)
	sw	$0,32($fp)
	sw	$0,36($fp)
	lw	$2,64($fp)
	li	$3,1			# 0x1
	beq	$2,$3,$L9
	nop

	li	$3,2			# 0x2
	beq	$2,$3,$L10
	nop

	bne	$2,$0,$L18
	nop

	lui	$2,%hi($LC0)
	addiu	$4,$2,%lo($LC0)
	lw	$2,%call16(puts)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,puts
1:	jalr	$25
	nop

	lw	$28,16($fp)
	li	$4,1			# 0x1
	lw	$2,%call16(exit)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,exit
1:	jalr	$25
	nop

$L9:
	lui	$2,%hi($LC0)
	addiu	$4,$2,%lo($LC0)
	lw	$2,%call16(puts)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,puts
1:	jalr	$25
	nop

	lw	$28,16($fp)
	li	$4,1			# 0x1
	lw	$2,%call16(exit)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,exit
1:	jalr	$25
	nop

$L10:
	lw	$2,68($fp)
	addiu	$2,$2,4
	lw	$3,0($2)
	lui	$2,%hi($LC1)
	addiu	$5,$2,%lo($LC1)
	move	$4,$3
	lw	$2,%call16(fopen)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,fopen
1:	jalr	$25
	nop

	lw	$28,16($fp)
	sw	$2,32($fp)
	lw	$2,32($fp)
	beq	$2,$0,$L12
	nop

	addiu	$2,$fp,44
	move	$6,$2
	lui	$2,%hi($LC2)
	addiu	$5,$2,%lo($LC2)
	lw	$4,32($fp)
	lw	$2,%call16(__isoc99_fscanf)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,__isoc99_fscanf
1:	jalr	$25
	nop

	lw	$28,16($fp)
	move	$3,$2
	li	$2,-1			# 0xffffffffffffffff
	bne	$3,$2,$L13
	nop

	lui	$2,%hi($LC3)
	addiu	$4,$2,%lo($LC3)
	lw	$2,%call16(puts)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,puts
1:	jalr	$25
	nop

	lw	$28,16($fp)
	li	$4,1			# 0x1
	lw	$2,%call16(exit)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,exit
1:	jalr	$25
	nop

$L13:
	lw	$2,44($fp)
	sll	$2,$2,2
	move	$4,$2
	lw	$2,%call16(malloc)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,malloc
1:	jalr	$25
	nop

	lw	$28,16($fp)
	sw	$2,28($fp)
	sw	$0,24($fp)
	b	$L14
	nop

$L15:
	lw	$2,24($fp)
	sll	$2,$2,2
	lw	$3,28($fp)
	addu	$2,$3,$2
	move	$6,$2
	lui	$2,%hi($LC4)
	addiu	$5,$2,%lo($LC4)
	lw	$4,32($fp)
	lw	$2,%call16(__isoc99_fscanf)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,__isoc99_fscanf
1:	jalr	$25
	nop

	lw	$28,16($fp)
	lw	$2,24($fp)
	addiu	$2,$2,1
	sw	$2,24($fp)
$L14:
	lw	$4,32($fp)
	lw	$2,%call16(feof)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,feof
1:	jalr	$25
	nop

	lw	$28,16($fp)
	beq	$2,$0,$L15
	nop

	lw	$2,%call16(clock)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,clock
1:	jalr	$25
	nop

	lw	$28,16($fp)
	sw	$2,40($fp)
	lw	$2,44($fp)
	move	$5,$2
	lw	$4,28($fp)
	.option	pic0
	jal	ordenamiento_iterativo
	nop

	.option	pic2
	lw	$28,16($fp)
	lw	$2,%call16(clock)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,clock
1:	jalr	$25
	nop

	lw	$28,16($fp)
	mtc1	$2,$f0
	nop
	cvt.d.w	$f2,$f0
	lw	$2,40($fp)
	mtc1	$2,$f0
	nop
	cvt.d.w	$f0,$f0
	sub.d	$f2,$f2,$f0
	lui	$2,%hi($LC5)
	ldc1	$f0,%lo($LC5)($2)
	div.d	$f0,$f2,$f0
	sdc1	$f0,48($fp)
	lw	$6,48($fp)
	lw	$7,52($fp)
	lui	$2,%hi($LC6)
	addiu	$4,$2,%lo($LC6)
	lw	$2,%call16(printf)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,printf
1:	jalr	$25
	nop

	lw	$28,16($fp)
	lui	$2,%hi($LC7)
	addiu	$5,$2,%lo($LC7)
	lui	$2,%hi($LC8)
	addiu	$4,$2,%lo($LC8)
	lw	$2,%call16(fopen)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,fopen
1:	jalr	$25
	nop

	lw	$28,16($fp)
	sw	$2,36($fp)
	sw	$0,24($fp)
	b	$L16
	nop

$L17:
	lw	$2,24($fp)
	sll	$2,$2,2
	lw	$3,28($fp)
	addu	$2,$3,$2
	lw	$2,0($2)
	move	$6,$2
	lui	$2,%hi($LC2)
	addiu	$5,$2,%lo($LC2)
	lw	$4,36($fp)
	lw	$2,%call16(fprintf)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,fprintf
1:	jalr	$25
	nop

	lw	$28,16($fp)
	lw	$2,24($fp)
	addiu	$2,$2,1
	sw	$2,24($fp)
$L16:
	lw	$2,44($fp)
	lw	$3,24($fp)
	slt	$2,$3,$2
	bne	$2,$0,$L17
	nop

	lw	$4,32($fp)
	lw	$2,%call16(fclose)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,fclose
1:	jalr	$25
	nop

	lw	$28,16($fp)
	lw	$4,36($fp)
	lw	$2,%call16(fclose)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,fclose
1:	jalr	$25
	nop

	lw	$28,16($fp)
	move	$4,$0
	lw	$2,%call16(exit)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,exit
1:	jalr	$25
	nop

$L12:
	lui	$2,%hi($LC3)
	addiu	$4,$2,%lo($LC3)
	lw	$2,%call16(puts)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,puts
1:	jalr	$25
	nop

	lw	$28,16($fp)
	li	$4,1			# 0x1
	lw	$2,%call16(exit)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,exit
1:	jalr	$25
	nop

$L18:
	lui	$2,%hi($LC9)
	addiu	$4,$2,%lo($LC9)
	lw	$2,%call16(puts)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,puts
1:	jalr	$25
	nop

	lw	$28,16($fp)
	li	$4,1			# 0x1
	lw	$2,%call16(exit)($28)
	move	$25,$2
	.reloc	1f,R_MIPS_JALR,exit
1:	jalr	$25
	nop

	.set	macro
	.set	reorder
	.end	main
	.size	main, .-main
	.rdata
	.align	3
$LC5:
	.word	0
	.word	1093567616
	.ident	"GCC: (Debian 5.3.1-5) 5.3.1 20160101"
